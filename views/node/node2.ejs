<!-- Express -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>ExpressJS - tutorial</title>
  <meta name = "viewport" content = "initial-scale=1, maximum-scale=1, user-scalable=no">
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.5/css/materialize.min.css">
  <script type="text/javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.5/js/materialize.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/animatecss/3.5.1/animate.min.css">
  <link rel="stylesheet" href="/css/node/node2css.css">

</head>
<body>

<% include ../templates/header %>
    <div class = "container">
      <div class = "row">
        <div class = "col s12">
          <h1 class = "center-align"><span class = "green-text text-accent-2">Express</span></h1>
        </div>
      </div>

      <div class = "row">
        <div class = "col s12">
          <div class = "collection">
            <a href="#httpserver" class = "collection-item">Basic express server</a>
            <a href="#httprequest" class = "collection-item">Serve html with express</a>
            <a href="#httprequestimage" class = "collection-item">Express get and post requests</a>
            <a href="#httpresponsehtml" class = "collection-item">Serve html from your server</a>
          </div>
        </div>
      </div>


    <div class = "row">
      <div class = "col s12" id = "httpserver">
        <h3>Basic Express Server</h3>
      </div>
      <div class = "col s12">
        <p><span><a href="http://expressjs.com/">Express</a></span> makes it easy and quick to build robust web apps.</p>
        <blockquote class = "grey-text darken-3 blockquote-style">
          npm install --save express
        </blockquote>
        <pre class = "card panel grey darken-4">
          <code>
<span class = "red-text">var</span> express = <span class = "yellow-text text-lighten-1">require</span>(<span class = "green-text text-accent-3">"express"</span>);
<span class = "red-text">var</span> app = express();

app.get(<span class = "green-text text-accent-3">"/"</span>, <span class = "red-text">function</span>(req, resp){
  resp.<span class = "yellow-text text-lighten-1">send</span>(<span class = "green-text text-accent-3">"Hello world"</span>);
});

app.listen(<span class = "blue-grey-text lighten-4">4000</span>);
          </code>
        </pre>
      </div>

      <div class = "col s12" id = "httprequest">
        <h3>Serve HTML with express</h3>
      </div>
      <div class = "aaa col s12">
        <p>We'll use what's called a template engine to create dynamic html pages. <span><a href="http://www.embeddedjs.com/">EJS</a></span> in this case but there are many more to choose from.</p>
        <p>Make sure to create a folder named views which will contain one file named index.ejs</p>
        <blockquote class = "grey-text darken-3 blockquote-style">
          npm install --save ejs
        </blockquote>
        <pre class = "card panel grey darken-4">
          <code>
<span class = "red-text">var</span> express = <span class = "yellow-text text-lighten-1">require</span>(<span class = "green-text text-accent-3">"express"</span>);
<span class = "red-text">var</span> app = express();

app.set(<span class = "green-text text-accent-3">"view engine"</span>, <span class = "green-text text-accent-3">"ejs"</span>);
app.set(<span class = "green-text text-accent-3">"views"</span>, <span class ="green-text text-accent-3">"./views"</span>);

app.get(<span class = "green-text text-accent-3">"/"</span>, <span class = "red-text">function</span>(req, resp){
  resp.render(<span class = "green-text text-accent-3">"index"</span>);
});

app.listen(<span class = "blue-grey-text lighten-4">4000</span>);
          </code>
        </pre>
        <p><span class = "red-text">app.set("view engine", "ejs")</span> Tells express what template engine we'll be using.</p>
        <p><span class = "red-text">app.set("views", "./views")</span> Let's express know where to find our templates.</p>
        <p><span class = "red-text">resp.render("index")</span> Renders the index.ejs file inside /views. Make sure you created that file and placed html inside of it.</p>
      </div>

      <div class = "col s12" id = "httprequestimage">
        <h3>Express get and post requests</h3>
      </div>
      <div class = "xxx col s12">
        <p>We'll use a router to handle get/post requests. Create a folder named routes with one file inside named router.js</p>
        <p>In order to read the data sent by post request to our server, we'll use a module named <span><a href= "https://www.npmjs.com/package/body-parser">body-parser</a></span></p>
        <blockquote class = "grey-text darken-3 blockquote-style">
          npm install --save body-parser
        </blockquote>
        <pre class = "card panel grey darken-4">
          <code>
<span class = "grey-text text-darken-2">//app.js</span>
<span class = "red-text">var</span> express = <span class = "yellow-text text-lighten-1">require</span>(<span class = "green-text text-accent-3">"express"</span>);
<span class = "red-text">var</span> app = express();
<span class = "red-text">var</span> router = <span class = "yellow-text text-lighten-1">require</span>(<span class = "green-text text-accent-3">"./routes/router.js"</span>);

<span class = "red-text">var</span> bodyParser = <span class = "yellow-text text-lighten-1">require</span>(<span class = "green-text text-accent-3">"body-parser"</span>);

app.set(<span class = "green-text text-accent-3">"view engine"</span>, <span class = "green-text text-accent-3">"ejs"</span>);
app.set(<span class = "green-text text-accent-3">"views"</span>, <span class = "green-text text text-accent-3">"./views"</span>);

app.use(bodyParser());

app.use(<span class = "green-text text-accent-3">"/"</span>, router);

app.listen(<span class = "blue-grey-text lighten-4">4000</span>);
          </code>
        </pre>

        <p><span class = "red-text">var router = require("./routes/router.js")</span> Our router which isn't created yet. Keep following along to create it.</p>
        <p><span class = "red-text">var bodyParser = require("body-parser")</span> Grab body-parser. Make sure you npm installed it.</p>
        <p><span class = "red-text">app.use(bodyParser())</span> Here we tell our app to use body-parser globally.</p>
        <pre class = "card panel grey darken-4">
          <code>
<span class = "grey-text text-darken-2">//router.js</span>
<span class = "red-text">var</span> express = <span class = "yellow-text text-lighten-1">require</span>(<span class = "green-text text-accent-3">"express"</span>);
<span class = "red-text">var</span> router = express.Router();

router.get(<span class = "green-text text-accent-3">"/"</span>, <span class = "red-text">function</span>(req, resp){
  resp.send(<span class = "green-text text-accent-3">&quot;&lt;form action = '/' method = 'POST'&gt; &lt;input type = 'text' name = 'firstname'&gt; &lt;input type = 'submit' value = 'submit'&gt; &lt;/form&gt;&quot;</span>);
});

router.post(<span class = "green-text text-accent-3">"/"</span>, <span class = "red-text">function</span>(req, resp){
  resp.send(<span class = "green-text text-accent-3">"Hello "</span> + req.<span class = "orange-text text-lighten-1">body</span>.firstname);
});

<span class = "red-text darken-1">module</span>.exports = router;
</code>
        </pre>
        <p>Here is our router. It does basically the same thing as app but with the added benefit of less code in the main app.js file.</p>
        <p><span class = "red-text">router.get()</span> Serves an html form where a user can type in their name. This value get's sent to the post on submit.</p>
        <p><span class = "red-text">router.post()</span> The body-parser passes the firstname's value into req.body.firstname. We respond with a greeting plus their name.</p>

      </div>

      <div class = "row">
        <div class = "col s12">
          <ul class="pagination">
            <li class="waves-effect"><a href="/tutorials/node/1"><i class="material-icons">chevron_left</i></a></li>
            <li class="waves-effect"><a href="/tutorials/node/1">1</a></li>
            <li class="active blue darken-1"><a href="#!">2</a></li>
            <li class="disabled"><a href="#!"><i class="material-icons">chevron_right</i></a></li>
          </ul>
        </div>
      </div>
    </div>

    </div>


<% include ../templates/footer %>

  <script>
    function aaa(){
      $(".aaa").addClass("animated bounceInLeft");
    }
    function xxx(){
      $(".xxx").addClass("animated bounceInLeft");
    }
    function yyy(){
      $(".yyy").addClass("animated bounceInLeft");
    }
    var options = [
      {selector: ".aaa", offset: 60, callback: "aaa()"},
      {selector: ".xxx", offset: 60, callback: "xxx()"},
      {selector: ".yyy", offset: 60, callback: "yyy()"}
    ];
    Materialize.scrollFire(options);
  </script>
</body>
</html>
